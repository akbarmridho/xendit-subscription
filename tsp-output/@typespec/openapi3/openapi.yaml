openapi: 3.0.0
info:
  title: Xendit Subscription API
  version: 0.0.0
tags: []
paths:
  /:
    post:
      operationId: Utils_test
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                planCb:
                  type: object
                  properties:
                    event:
                      type: string
                    business_id:
                      type: string
                    created:
                      type: string
                      format: date-time
                    data:
                      $ref: '#/components/schemas/Plan'
                    api_version:
                      type: string
                  required:
                    - event
                    - business_id
                    - created
                cycleCb:
                  type: object
                  properties:
                    event:
                      type: string
                    business_id:
                      type: string
                    created:
                      type: string
                      format: date-time
                    data:
                      $ref: '#/components/schemas/Cycle'
                    api_version:
                      type: string
                  required:
                    - event
                    - business_id
                    - created
              required:
                - planCb
                - cycleCb
  /recurring/plans:
    post:
      operationId: Plans_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - API_VALIDATION_ERROR
                      message:
                        type: string
                    required:
                      - error_code
                      - message
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - INVALID_PAYMENT_METHOD_ID
                      message:
                        type: string
                    required:
                      - error_code
                      - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - PAYMENT_METHOD_ID_NOT_FOUND
                      message:
                        type: string
                    required:
                      - error_code
                      - message
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - CUSTOMER_NOT_FOUND
                      message:
                        type: string
                    required:
                      - error_code
                      - message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanCreate.PlanDto'
  /recurring/plans/{id}:
    patch:
      operationId: Plans_update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: update-scheduled-cycle
          in: header
          required: false
          schema:
            type: string
            enum:
              - 'TRUE'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - API_VALIDATION_ERROR
                      message:
                        type: string
                    required:
                      - error_code
                      - message
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - INVALID_PAYMENT_METHOD_ID
                      message:
                        type: string
                    required:
                      - error_code
                      - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - PAYMENT_METHOD_ID_NOT_FOUND
                      message:
                        type: string
                    required:
                      - error_code
                      - message
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - CUSTOMER_NOT_FOUND
                      message:
                        type: string
                    required:
                      - error_code
                      - message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanUpdate.PlanDto'
    get:
      operationId: Plans_fetchObject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
  /recurring/plans/{id}/cycles:
    get:
      operationId: Plans_getCyclesList
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: after_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Cycle'
                  has_more:
                    type: boolean
                required:
                  - data
                  - has_more
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
  /recurring/plans/{id}/deactivate:
    post:
      operationId: Plans_deactivate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plan'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
  /recurring/plans/{plan_id}/cycles/{id}:
    patch:
      operationId: Cycles_update
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cycle'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '403':
          description: Access is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INELIGIBLE_CYCLE_REQUEST
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CycleUpdate.CycleDto'
    get:
      operationId: Cycles_fetchObject
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cycle'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
  /recurring/plans/{plan_id}/cycles/{id}/cancel:
    post:
      operationId: Cycles_cancel
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cycle'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '403':
          description: Access is forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INELIGIBLE_CYCLE_REQUEST
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
  /recurring/plans/{plan_id}/cycles/{id}/force_attempt:
    post:
      operationId: Cycles_forceCycleAttempt
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cycle'
        '403':
          description: Access is forbidden.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - INELIGIBLE_CYCLE_REQUEST
                      message:
                        type: string
                    required:
                      - error_code
                      - message
                  - type: object
                    properties:
                      error_code:
                        type: string
                        enum:
                          - MAXIMUM_LIMIT_REACHED
                      message:
                        type: string
                    required:
                      - error_code
                      - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
  /recurring/schedules/{id}:
    get:
      operationId: Schedules_fetchObject
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
  /recurring/schedules/{id}/{plan_id}:
    patch:
      operationId: Schedules_update
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - API_VALIDATION_ERROR
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '401':
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - INVALID_API_KEY
                  message:
                    type: string
                required:
                  - error_code
                  - message
        '404':
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: string
                    enum:
                      - DATA_NOT_FOUND
                  message:
                    type: string
                required:
                  - error_code
                  - message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdate.ScheduleDto'
security:
  - BasicAuth: []
components:
  schemas:
    Action:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum:
            - AUTH
          description: Describes the purpose the corresponding action
        url_type:
          type: string
          enum:
            - WEB
          description: Describes the type of URL provided
        url:
          type: string
          description: The generated URL to hit in order to perform the action
        method:
          type: string
          enum:
            - GET
            - POST
          description: HTTP method for calling the url
      description: Represents an action for a Subscriptions plan
    AttemptDetail:
      type: object
      required:
        - attempt_number
        - created
        - action_id
        - status
      properties:
        attempt_number:
          type: integer
          format: int32
          description: A numbering that tracks the order of cycle attempts
        created:
          type: string
          format: date-time
          description: ISO 8601 Timestamp for attempted actions. Timezone UTC+0
        action_id:
          type: string
          description: ID of associated action (e.g. payment ID)
        status:
          allOf:
            - $ref: '#/components/schemas/AttemptDetailEnum'
          description: Status of action
        failure_code:
          type: string
          description: Reason for failure of recurring action in this attempt
        next_retry_timestamp:
          type: string
          format: date-time
          description: ISO 8601 Estimated timestamp for next retry. Timezone UTC+0
    AttemptDetailEnum:
      type: string
      enum:
        - SUCCEEDED
        - FAILED
        - PENDING
    CurrencyEnum:
      type: string
      enum:
        - IDR
        - PHP
    Cycle:
      type: object
      required:
        - id
        - plan_id
        - reference_id
        - customer_id
        - recurring_action
        - type
        - cycle_number
        - attempt_count
        - attempt_details
        - status
        - scheduled_timestamp
        - created
        - updated
        - currency
        - amount
      properties:
        id:
          type: string
          description: Xendit-generated recurring cycle ID, with prefix recy-xxx
        plan_id:
          type: string
          description: Xendit-generated recurring plan ID, with prefix repl-xxx
        reference_id:
          type: string
          minLength: 1
          maxLength: 64
          description: Merchant-provided identifier, inherited from the recurring plan object.
        customer_id:
          type: string
          description: Xendit-generated customer ID, inherited from the recurring plan object, with prefix cust-xxx
        recurring_action:
          type: string
          enum:
            - PAYMENT
          description: The type of recurring action requested, inherited from the recurring plan object
        type:
          allOf:
            - $ref: '#/components/schemas/CycleType'
          description: The type of recurring cycle
        cycle_number:
          type: integer
          format: int32
          minimum: 1
          description: A numbering that tracks the order of cycle objects generated by a recurring plan.
        attempt_count:
          type: integer
          format: int32
          description: Number of times the recurring action has been attempted for this recurring cycle object
        attempt_details:
          type: array
          items:
            $ref: '#/components/schemas/AttemptDetail'
          description: Detailed information of each action attempts
        status:
          allOf:
            - $ref: '#/components/schemas/CycleStatus'
          description: Status of recurring cycle
        scheduled_timestamp:
          type: string
          description: ISO 8601 Timestamp for the upcoming action attempt for the recurring cycle
        created:
          type: string
          format: date-time
          description: ISO 8601 Timestamp for recurring cycle creation. Timezone UTC+0
        updated:
          type: string
          format: date-time
          description: ISO 8601 Timestamp for latest cycle object update. Timezone UTC+0
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: ISO 4217 currency code of recurring plan
        amount:
          type: integer
          format: int32
          description: Amount that recurring plan will charge to end users. Min - IDR 1,000 (Indonesia) / PHP 50 (Philippines)
    CycleStatus:
      type: string
      enum:
        - SCHEDULED
        - PENDING
        - RETRYING
        - FAILED
        - SUCCEEDED
        - CANCELLED
    CycleType:
      type: string
      enum:
        - SCHEDULED
        - IMMEDIATE
    CycleUpdate.CycleDto:
      type: object
      properties:
        scheduled_timestamp:
          type: string
          format: date-time
        currency:
          $ref: '#/components/schemas/CurrencyEnum'
        amount:
          type: integer
          format: int32
    FailedCycleActionEnum:
      type: string
      enum:
        - RESUME
        - STOP
    Item:
      type: object
      required:
        - type
        - name
        - net_unit_amount
        - quantity
      properties:
        type:
          allOf:
            - $ref: '#/components/schemas/ItemTypeEnum'
          description: Type of item
        name:
          type: string
          maxLength: 255
          description: Item name.
        net_unit_amount:
          type: number
          format: double
          description: Net amount to be charged per unit, please put negative amount for DISCOUNT
        quantity:
          type: integer
          format: int32
          description: Number of units of this item in the basket. Min 1
        url:
          type: string
          description: URL of the item
        category:
          type: string
          maxLength: 255
          description: Merchant category for item.
        subcategory:
          type: string
          maxLength: 255
          description: Merchant subcategory for item.
        description:
          type: string
          maxLength: 255
          description: Item description.
        metadata:
          type: object
          additionalProperties: {}
          description: Additional object that may be used for additional item attributes
      description: Represents an item in a Subscriptions plan
    ItemTypeEnum:
      type: string
      enum:
        - DIGITAL_PRODUCT
        - PHYSICAL_PRODUCT
        - DIGITAL_SERVICE
        - PHYSICAL_SERVICE
        - FEE
        - DISCOUNT
    NotificationChannelEnum:
      type: string
      enum:
        - WHATSAPP
        - EMAIL
    NotificationConfig:
      type: object
      properties:
        recurring_created:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannelEnum'
          description: Specify which channel you want to notify your end customer through when a Subscriptions plan is created
        recurring_succeeded:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannelEnum'
          description: Specify which channel you want to notify your end customer through when a Subscriptions cycle was successfully completed
        recurring_failed:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannelEnum'
          description: Specify which channel you want to notify your end customer through when a Subscriptions cycle has failed
        locale:
          type: string
          enum:
            - en
            - id
          description: 'ISO 639-1: two-letter codes for language of notifications sent to end user'
      description: Represents the notification configuration for a Subscriptions plan
    PaymentMethod:
      type: object
      required:
        - payment_method_id
        - rank
        - type
      properties:
        payment_method_id:
          type: string
          description: ID for payment_method_id generated by Create Payment Method API
        rank:
          type: integer
          format: int32
          minimum: 1
          maximum: 5
          description: Indicate the order which payments methods will be attempted for a payment cycle instance.
        type:
          allOf:
            - $ref: '#/components/schemas/PaymentMethodTypeEnum'
          description: Type of payment method
      description: Represents a payment method for a Subscriptions plan
    PaymentMethodTypeEnum:
      type: string
      enum:
        - EWALLET
        - DIRECT_DEBIT
        - CARD
    Plan:
      type: object
      required:
        - id
        - reference_id
        - customer_id
        - recurring_action
        - recurring_cycle_count
        - currency
        - amount
        - status
        - created
        - updated
        - schedule
      properties:
        id:
          type: string
          description: Xendit-generated Subscriptions plan ID, with prefix repl-xxx
        reference_id:
          type: string
          minLength: 1
          maxLength: 64
          description: Merchant-provided identifier for the Subscriptions plan.
        customer_id:
          type: string
          description: Xendit-generated customer ID, with prefix cust-xxx
        recurring_action:
          type: string
          enum:
            - PAYMENT
          description: The type of Subscriptions action requested
        recurring_cycle_count:
          type: integer
          format: int32
          description: Total number of cycles the Subscriptions plan has executed. Immediate charge cycle also counts as 1 cycle count
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: ISO 4217 currency code of Subscriptions plan
        amount:
          type: integer
          format: int32
          description: Amount that Subscriptions plan will charge to end users. Min - Rp 1000 (Indonesia) or PHP 50 (Philippines)
        status:
          allOf:
            - $ref: '#/components/schemas/PlanStatus'
          description: Status of Subscriptions plan
        created:
          type: string
          format: date-time
          description: ISO 8601 Timestamp for Subscriptions plan creation. Timezone UTC+0
        updated:
          type: string
          format: date-time
          description: ISO 8601 Timestamp for latest plan object update. Timezone UTC+0
        payment_methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
          description: Array of payment methods that the Subscriptions plan will attempt to make payments with
        schedule_id:
          type: string
          description: Xendit-generated Subscriptions schedule ID
        schedule:
          allOf:
            - $ref: '#/components/schemas/Schedule'
          description: Data object containing the configurations of how Subscriptions cycles will be scheduled
        immediate_action_type:
          type: string
          enum:
            - FULL_AMOUNT
          description: The type of action the Subscriptions plan takes upon creation
        notification_config:
          allOf:
            - $ref: '#/components/schemas/NotificationConfig'
          description: Object containing notification preferences for the Subscriptions plan
        payment_link_for_failed_attempt:
          type: boolean
          description: Indicates whether the plan should generate a payment link to be sent to the end customer when the first attempt of the cycle fails
        failed_cycle_action:
          allOf:
            - $ref: '#/components/schemas/FailedCycleActionEnum'
          description: Indicate the behaviour the Subscriptions plan should take when Subscriptions cycles fail
        metadata:
          type: object
          additionalProperties: {}
          description: Object of additional information the merchants may use
        description:
          type: string
          minLength: 1
          maxLength: 1000
          description: Description of Subscriptions plan.
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          description: Array of objects describing the item/s
        actions:
          type: array
          items:
            $ref: '#/components/schemas/Action'
          description: Array of objects that contain URLs for end users to complete their Subscriptions plan
        success_return_url:
          type: string
          description: URL where the end user is redirected after account linking has been successful
        failure_return_url:
          type: string
          description: URL where the end-customer is redirected if the account linking has failed
      description: Represents a Subscriptions plan
    PlanCreate.PlanDto:
      type: object
      properties:
        payment_methods:
          type: array
          items:
            type: object
            required:
              - payment_method_id
              - rank
            properties:
              payment_method_id:
                type: string
                description: ID for payment_method_id generated by Create Payment Method API
              rank:
                type: integer
                format: int32
                minimum: 1
                maximum: 5
                description: Indicate the order which payments methods will be attempted for a payment cycle instance.
            description: The template for omitting properties.
        schedule:
          type: object
          required:
            - reference_id
            - interval
            - interval_count
          properties:
            reference_id:
              type: string
              description: Merchant-provided identifier for the schedule
            interval:
              allOf:
                - $ref: '#/components/schemas/ScheduleIntervalEnum'
              description: The type of interval between consecutive Subscriptions cycles
            interval_count:
              type: integer
              format: int32
              description: The number of units of interval between consecutive Subscriptions cycles
            total_recurrence:
              type: integer
              format: int32
              nullable: true
              description: The total number of times the end user will be charged
            anchor_date:
              type: string
              format: date-time
              description: Timestamp in ISO 8601 used to determine when a Subscriptions plan starts
            retry_interval:
              type: string
              enum:
                - DAY
              description: The type of interval between failed attempt and retries
            retry_interval_count:
              type: integer
              format: int32
              description: The number of units of retry_interval between consecutive retries
            total_retry:
              type: integer
              format: int32
              minimum: 1
              maximum: 10
              description: The number of times you will retry a failed Subscriptions cycle.
            failed_attempt_notifications:
              type: array
              items:
                type: integer
                format: int32
              description: Specify which retry attempts will have failed Subscriptions notifications to the end user
          description: The template for omitting properties.
      allOf:
        - type: object
          required:
            - customer_id
            - recurring_action
            - currency
            - amount
          properties:
            customer_id:
              type: string
              description: Xendit-generated customer ID, with prefix cust-xxx
            recurring_action:
              type: string
              enum:
                - PAYMENT
              description: The type of Subscriptions action requested
            currency:
              allOf:
                - $ref: '#/components/schemas/CurrencyEnum'
              description: ISO 4217 currency code of Subscriptions plan
            amount:
              type: integer
              format: int32
              description: Amount that Subscriptions plan will charge to end users. Min - Rp 1000 (Indonesia) or PHP 50 (Philippines)
            immediate_action_type:
              type: string
              enum:
                - FULL_AMOUNT
              description: The type of action the Subscriptions plan takes upon creation
            notification_config:
              allOf:
                - $ref: '#/components/schemas/NotificationConfig'
              description: Object containing notification preferences for the Subscriptions plan
            payment_link_for_failed_attempt:
              type: boolean
              description: Indicates whether the plan should generate a payment link to be sent to the end customer when the first attempt of the cycle fails
            failed_cycle_action:
              allOf:
                - $ref: '#/components/schemas/FailedCycleActionEnum'
              description: Indicate the behaviour the Subscriptions plan should take when Subscriptions cycles fail
            metadata:
              type: object
              additionalProperties: {}
              description: Object of additional information the merchants may use
            description:
              type: string
              minLength: 1
              maxLength: 1000
              description: Description of Subscriptions plan.
            items:
              type: array
              items:
                $ref: '#/components/schemas/Item'
              description: Array of objects describing the item/s
            actions:
              type: array
              items:
                $ref: '#/components/schemas/Action'
              description: Array of objects that contain URLs for end users to complete their Subscriptions plan
            success_return_url:
              type: string
              description: URL where the end user is redirected after account linking has been successful
            failure_return_url:
              type: string
              description: URL where the end-customer is redirected if the account linking has failed
          description: The template for omitting properties.
    PlanStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
        - PENDING
        - REQUIRES_ACTION
    PlanUpdate.PlanDto:
      type: object
      properties:
        customer_id:
          type: string
          description: Xendit-generated customer ID, with prefix cust-xxx
        currency:
          allOf:
            - $ref: '#/components/schemas/CurrencyEnum'
          description: ISO 4217 currency code of Subscriptions plan
        amount:
          type: integer
          format: int32
          description: Amount that Subscriptions plan will charge to end users. Min - Rp 1000 (Indonesia) or PHP 50 (Philippines)
        payment_methods:
          type: array
          items:
            type: object
            required:
              - payment_method_id
              - rank
            properties:
              payment_method_id:
                type: string
                description: ID for payment_method_id generated by Create Payment Method API
              rank:
                type: integer
                format: int32
                minimum: 1
                maximum: 5
                description: Indicate the order which payments methods will be attempted for a payment cycle instance.
            description: The template for omitting properties.
          description: Array of payment methods that the Subscriptions plan will attempt to make payments with
        notification_config:
          allOf:
            - $ref: '#/components/schemas/NotificationConfig'
          description: Object containing notification preferences for the Subscriptions plan
        payment_link_for_failed_attempt:
          type: boolean
          description: Indicates whether the plan should generate a payment link to be sent to the end customer when the first attempt of the cycle fails
        metadata:
          type: object
          additionalProperties: {}
          description: Object of additional information the merchants may use
        description:
          type: string
          minLength: 1
          maxLength: 1000
          description: Description of Subscriptions plan.
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
          description: Array of objects describing the item/s
        recurring_action:
          type: string
          enum:
            - PAYMENT
          description: The type of Subscriptions action requested
    Schedule:
      type: object
      required:
        - id
        - reference_id
        - business_id
        - interval
        - interval_count
        - created
        - updated
      properties:
        id:
          type: string
          description: Xendit-generated Subscriptions schedule ID
        reference_id:
          type: string
          description: Merchant-provided identifier for the schedule
        business_id:
          type: string
          description: Xendit-generated identifier for the business
        interval:
          allOf:
            - $ref: '#/components/schemas/ScheduleIntervalEnum'
          description: The type of interval between consecutive Subscriptions cycles
        interval_count:
          type: integer
          format: int32
          description: The number of units of interval between consecutive Subscriptions cycles
        created:
          type: string
          format: date-time
          description: ISO 8601 Timestamp for recurring schedule creation. Timezone UTC+0
        updated:
          type: string
          format: date-time
          description: ISO 8601 Timestamp for latest schedule object update. Timezone UTC+0
        total_recurrence:
          type: integer
          format: int32
          nullable: true
          description: The total number of times the end user will be charged
        anchor_date:
          type: string
          format: date-time
          description: Timestamp in ISO 8601 used to determine when a Subscriptions plan starts
        retry_interval:
          type: string
          enum:
            - DAY
          description: The type of interval between failed attempt and retries
        retry_interval_count:
          type: integer
          format: int32
          description: The number of units of retry_interval between consecutive retries
        total_retry:
          type: integer
          format: int32
          minimum: 1
          maximum: 10
          description: The number of times you will retry a failed Subscriptions cycle.
        failed_attempt_notifications:
          type: array
          items:
            type: integer
            format: int32
          description: Specify which retry attempts will have failed Subscriptions notifications to the end user
      description: Represents the schedule configuration for a Subscriptions plan
    ScheduleIntervalEnum:
      type: string
      enum:
        - DAY
        - WEEK
        - MONTH
    ScheduleUpdate.ScheduleDto:
      type: object
      properties:
        interval:
          $ref: '#/components/schemas/ScheduleIntervalEnum'
        interval_count:
          type: integer
          format: int32
        total_recurrence:
          type: integer
          format: int32
          nullable: true
        anchor_date:
          type: string
          format: date-time
        retry_interval:
          type: string
          enum:
            - DAY
        retry_interval_count:
          type: integer
          format: int32
        total_retry:
          type: integer
          format: int32
          minimum: 1
          maximum: 10
        failed_attempt_notifications:
          type: array
          items:
            type: integer
            format: int32
          description: Specify which retry attempts will have failed Subscriptions notifications to the end user
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
servers:
  - url: https://api.xendit.co
    description: Xendit API endpoint
    variables: {}
